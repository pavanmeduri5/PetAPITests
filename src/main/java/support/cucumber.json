[{"line":2,"elements":[{"start_timestamp":"2024-02-18T16:27:47.938Z","before":[{"result":{"duration":15626300,"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":5,"name":"Add a new pet with valid and invalid cases.","description":"","id":"pet-end-point-validations;add-a-new-pet-with-valid-and-invalid-cases.","after":[{"result":{"error_message":"java.lang.AssertionError: The following asserts failed:\n\tCurrent Test is designed for Status code:400: Actual 200 expected [false] but found [true],\n\tCurrent Test is designed for Status code: 405 Actual: 400 expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.bdd.pet.stepDefinitions.Hooks.afterAll(Hooks.java:19)\r\n","status":"failed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":3537828900,"status":"passed"},"line":6,"name":"user initiates rest service to add new pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.user_initiates_rest_service_to_add_new_pet()"},"keyword":"When "},{"result":{"duration":357256000,"status":"passed"},"line":7,"name":"verify response is successful and returns valid pet data","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.verifyResponseIsSuccessfulAndReturnsValidPetData()"},"keyword":"Then "},{"result":{"duration":1156369700,"status":"passed"},"line":8,"name":"user adds same pet again","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.user_add_same_pet()"},"keyword":"When "},{"result":{"duration":15590100,"status":"passed"},"line":9,"name":"verify response is successful and returns valid pet data","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.verifyResponseIsSuccessfulAndReturnsValidPetData()"},"keyword":"Then "},{"result":{"duration":1172024100,"status":"passed"},"line":10,"name":"user adds pet with multiple tags","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userAddsPetWithMultipleTags()"},"keyword":"When "},{"result":{"duration":31194700,"status":"passed"},"line":11,"name":"verify response is successful and returns valid pet data","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.verifyResponseIsSuccessfulAndReturnsValidPetData()"},"keyword":"Then "},{"result":{"duration":1172016200,"status":"passed"},"line":12,"name":"user adds new pet without mandatory fields","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.addNewPetWithoutMandatoryFields()"},"keyword":"When "},{"result":{"duration":15560700,"status":"passed"},"line":13,"name":"verify response throws error for not providing mandatory fields","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForNotProvidingMandatoryFields()"},"keyword":"Then "},{"result":{"duration":1156368200,"status":"passed"},"line":14,"name":"user adds pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.user_adds_invalid_pet()"},"keyword":"When "},{"result":{"status":"passed"},"line":15,"name":"verify response throws error for adding pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForAddingPetWithInvalidId()"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:27:56.739Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":17,"name":"Get a pet with valid and invalid cases","description":"","id":"pet-end-point-validations;get-a-pet-with-valid-and-invalid-cases","after":[{"result":{"error_message":"java.lang.AssertionError: The following asserts failed:\n\tCurrent Test is designed for Status code:400: Actual 404 expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.bdd.pet.stepDefinitions.Hooks.afterAll(Hooks.java:19)\r\n","status":"failed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1171959100,"status":"passed"},"line":18,"name":"user performs search of a valid pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfAValidPet()"},"keyword":"When "},{"result":{"duration":15643700,"status":"passed"},"line":19,"name":"verify response is successful and returns valid pet data","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.verifyResponseIsSuccessfulAndReturnsValidPetData()"},"keyword":"Then "},{"result":{"duration":1125145400,"status":"passed"},"line":20,"name":"user performs search of non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfNonExistingPet()"},"keyword":"When "},{"result":{"duration":31252000,"status":"passed"},"line":21,"name":"verify response throws error for non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForNonExistingPet()"},"keyword":"Then "},{"result":{"duration":1172021600,"status":"passed"},"line":22,"name":"user performs search of pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfPetWithoutId()"},"keyword":"When "},{"result":{"duration":15563800,"status":"passed"},"line":23,"name":"verify response throws error for pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForPetWithoutId()"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:00.333Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":26,"name":"Update a pet with valid and invalid cases","description":"","id":"pet-end-point-validations;update-a-pet-with-valid-and-invalid-cases","after":[{"result":{"error_message":"java.lang.AssertionError: The following asserts failed:\n\tCurrent Test is designed for Status code:404: Actual 200 expected [false] but found [true],\n\tCurrent Test is designed for Status code:400: Actual 415 expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.bdd.pet.stepDefinitions.Hooks.afterAll(Hooks.java:19)\r\n","status":"failed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1156376000,"status":"passed"},"line":27,"name":"user performs update of an existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateOfAnExistingPet()"},"keyword":"When "},{"result":{"status":"passed"},"line":28,"name":"verify response is successful","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessful()"},"keyword":"Then "},{"result":{"duration":1156269600,"status":"passed"},"line":29,"name":"user performs update of non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateOfNonExistingPet()"},"keyword":"When "},{"result":{"status":"passed"},"line":30,"name":"verify response throws error for non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForNonExistingPet()"},"keyword":"Then "},{"result":{"duration":1156401900,"status":"passed"},"line":31,"name":"user performs update with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateWithInvalidId()"},"keyword":"When "},{"result":{"status":"passed"},"line":32,"name":"verify response throws error for pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForPetWithoutId()"},"keyword":"Then "},{"result":{"duration":1125139600,"status":"passed"},"line":33,"name":"user performs update with invalid request method","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateWithInvalidRequestMethod()"},"keyword":"When "},{"result":{"duration":15561900,"status":"passed"},"line":34,"name":"verify response throws error with invalid request","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorWithInvalidRequest()"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:04.974Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":37,"name":"Update  pet form with valid and invalid cases","description":"","id":"pet-end-point-validations;update--pet-form-with-valid-and-invalid-cases","after":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":2359610300,"status":"passed"},"line":38,"name":"user performs update of form for an existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateOfFormForAnExistingPet()"},"keyword":"When "},{"result":{"status":"passed"},"line":39,"name":"verify response is successful","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessful()"},"keyword":"Then "},{"result":{"duration":1187573000,"status":"passed"},"line":40,"name":"user performs update of form for non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateOfFormForNonExistingPet()"},"keyword":"When "},{"result":{"status":"passed"},"line":41,"name":"verify response throws error for non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForNonExistingPet()"},"keyword":"Then "},{"result":{"duration":1156339400,"status":"passed"},"line":42,"name":"user performs update of form invalid request method","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsUpdateOfFormInvalidRequestMethod()"},"keyword":"When "},{"result":{"duration":15618800,"status":"passed"},"line":43,"name":"verify response throws error with invalid request","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorWithInvalidRequest()"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:09.709Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":45,"name":"Delete a pet with valid and invalid cases","description":"","id":"pet-end-point-validations;delete-a-pet-with-valid-and-invalid-cases","after":[{"result":{"error_message":"java.lang.AssertionError: The following asserts failed:\n\tCurrent Test is designed for Status code: 200 Actual: 404 expected [true] but found [false],\n\tCurrent Test is designed for Status code:400: Actual 404 expected [true] but found [false]\r\n\tat org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:43)\r\n\tat com.bdd.pet.stepDefinitions.Hooks.afterAll(Hooks.java:19)\r\n","status":"failed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1156397300,"status":"passed"},"line":46,"name":"user performs delete of an existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsDeleteOfAnExistingPet()"},"keyword":"When "},{"result":{"duration":15561100,"status":"passed"},"line":47,"name":"verify response is successful","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessful()"},"keyword":"Then "},{"result":{"duration":1161475400,"status":"passed"},"line":48,"name":"user performs delete of non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsDeleteOfNonExistingPet()"},"keyword":"When "},{"result":{"status":"passed"},"line":49,"name":"verify response throws error for non existing pet","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForNonExistingPet()"},"keyword":"Then "},{"result":{"duration":1157420100,"status":"passed"},"line":50,"name":"user performs delete with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsDeleteWithInvalidId()"},"keyword":"When "},{"result":{"status":"passed"},"line":51,"name":"verify response throws error for pet with invalid id","match":{"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseThrowsErrorForPetWithoutId()"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:13.221Z","before":[{"result":{"duration":46876300,"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":59,"name":"Get pets with status cases","description":"","id":"pet-end-point-validations;get-pets-with-status-cases;;2","after":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1386792800,"status":"passed"},"line":54,"name":"user performs search of pets with different \"available\"","match":{"arguments":[{"val":"\"available\"","offset":44}],"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfPetsWithDifferent(java.lang.String)"},"keyword":"When "},{"result":{"duration":42826500,"status":"passed"},"line":55,"name":"verify response is successful with same \"available\" pets","match":{"arguments":[{"val":"\"available\"","offset":40}],"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessfulWithSamePets(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:14.750Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":60,"name":"Get pets with status cases","description":"","id":"pet-end-point-validations;get-pets-with-status-cases;;3","after":[{"result":{"duration":999000,"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1124794700,"status":"passed"},"line":54,"name":"user performs search of pets with different \"pending\"","match":{"arguments":[{"val":"\"pending\"","offset":44}],"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfPetsWithDifferent(java.lang.String)"},"keyword":"When "},{"result":{"duration":4998900,"status":"passed"},"line":55,"name":"verify response is successful with same \"pending\" pets","match":{"arguments":[{"val":"\"pending\"","offset":40}],"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessfulWithSamePets(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]},{"start_timestamp":"2024-02-18T16:28:15.887Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":61,"name":"Get pets with status cases","description":"","id":"pet-end-point-validations;get-pets-with-status-cases;;4","after":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario Outline","steps":[{"result":{"duration":1141647200,"status":"passed"},"line":54,"name":"user performs search of pets with different \"sold\"","match":{"arguments":[{"val":"\"sold\"","offset":44}],"location":"com.bdd.pet.stepDefinitions.PetStepDef.userPerformsSearchOfPetsWithDifferent(java.lang.String)"},"keyword":"When "},{"result":{"duration":15572100,"status":"passed"},"line":55,"name":"verify response is successful with same \"sold\" pets","match":{"arguments":[{"val":"\"sold\"","offset":40}],"location":"com.bdd.pet.stepDefinitions.BaseStepDef.verifyResponseIsSuccessfulWithSamePets(java.lang.String)"},"keyword":"Then "}],"tags":[{"name":"@Regression"}]}],"name":"Pet end point validations","description":"","id":"pet-end-point-validations","keyword":"Feature","uri":"file:src/test/resources/features/PetCRUD.feature","tags":[{"name":"@Regression","type":"Tag","location":{"line":1,"column":1}}]},{"line":2,"elements":[{"start_timestamp":"2024-02-18T16:28:17.063Z","before":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.beforeScenario()"}}],"line":4,"name":"Update image for a pet","description":"","id":"pet-image-scenarios;update-image-for-a-pet","after":[{"result":{"status":"passed"},"match":{"location":"com.bdd.pet.stepDefinitions.Hooks.afterAll()"}}],"type":"scenario","keyword":"Scenario","steps":[{"result":{"duration":1128335900,"status":"passed"},"line":5,"name":"create a new pet","match":{"location":"com.bdd.pet.stepDefinitions.PetImageStepDef.createANewPet()"},"keyword":"Given "},{"result":{"duration":1535761300,"status":"passed"},"line":6,"name":"user uploads \"pic.jpg\" with \"most popular pet\" description","match":{"arguments":[{"val":"\"pic.jpg\"","offset":13},{"val":"\"most popular pet\"","offset":28}],"location":"com.bdd.pet.stepDefinitions.PetImageStepDef.userUploadsWithDescription(java.lang.String,java.lang.String)"},"keyword":"When "},{"result":{"duration":15595500,"status":"passed"},"line":7,"name":"verify response indicates upload image is success","match":{"location":"com.bdd.pet.stepDefinitions.PetImageStepDef.verifyResponseIndicatesUploadImageIsSuccess()"},"keyword":"Then "},{"result":{"duration":1746263700,"status":"passed"},"line":8,"name":"user deletes the pet","match":{"location":"com.bdd.pet.stepDefinitions.PetImageStepDef.userDeletesThePet()"},"keyword":"And "}],"tags":[{"name":"@Regression"}]}],"name":"Pet Image scenarios","description":"","id":"pet-image-scenarios","keyword":"Feature","uri":"file:src/test/resources/features/PetImage.feature","tags":[{"name":"@Regression","type":"Tag","location":{"line":1,"column":1}}]}]